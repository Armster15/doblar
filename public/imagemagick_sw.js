const broadcast=new BroadcastChannel("imagemagick-progress"),onReadyBroadcast=new BroadcastChannel("imagemagick-onready"),loadingMethodBroadcast=new BroadcastChannel("imagemagick-loadingmethod");self.addEventListener("activate",function(e){self.skipWaiting(),e.waitUntil(self.clients.claim().then(()=>{onReadyBroadcast.postMessage(!0)}))});function consume(e,n){var t=0;return new Promise((a,c)=>{function o(){e.read().then(({done:r,value:s})=>{if(r){a();return}t+=s.byteLength,broadcast.postMessage({bytesDownloadedTotal:t,bytesJustDownloaded:s?.byteLength,percent:n?t/n*100:void 0}),o()}).catch(c)}o()})}self.addEventListener("fetch",function(e){(/\/assets\/worker.*.js$/.test(e.request.url)||/\/node_modules\/.vite\/imagemagick-wasm-builds.js/.test(e.request.url))&&e.respondWith(caches.match(e.request).then(function(n){return n?(loadingMethodBroadcast.postMessage("cache"),console.log("Found ImageMagick in cache:",n),n):(loadingMethodBroadcast.postMessage("download"),console.log("ImageMagick not found in cache. About to fetch from network..."),fetch(e.request).then(t=>{let a=t.clone();const c=Number.isNaN(Number(a.headers.get("content-length")))?void 0:Number(t.headers.get("content-length"));return consume(a.body.getReader(),c).then(()=>(caches.open("imagemagick").then(o=>{o.add(e.request)}),t))}).catch(function(t){throw console.error("Fetching failed:",t),t}))}))});
